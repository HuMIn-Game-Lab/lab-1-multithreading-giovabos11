{
    "./compilecode/Project1/Dog.cpp": [
        {
            "code": "{\n    int woof = 1\n}\n",
            "column": 1,
            "error": "expected ',' or ';' before '}' token",
            "file": "./compilecode/Project1/Dog.cpp",
            "line": 8
        }
    ],
    "./compilecode/Project1/Dog.h": [
        {
            "code": "#include <iostream>\n\nclass Dog\n{\npublic:\n",
            "column": 1,
            "error": "new types may not be defined in a return type",
            "file": "./compilecode/Project1/Dog.h",
            "line": 4
        },
        {
            "code": "#include <iostream>\n\nclass Dog\n{\npublic:\n",
            "column": 1,
            "file": "./compilecode/Project1/Dog.h",
            "line": 4,
            "note": "(perhaps a semicolon is missing after the definition of 'Dog')"
        },
        {
            "code": "#include <iostream>\n\nclass Dog\n{\npublic:\n",
            "column": 1,
            "error": "return type specification for constructor invalid",
            "file": "./compilecode/Project1/Dog.h",
            "line": 4
        }
    ],
    "./compilecode/Project1/hello_world.cpp": [
        {
            "code": "#pragma once\n#include <iostream>\n\n",
            "column": 9,
            "file": "./compilecode/Project1/hello_world.cpp",
            "line": 1,
            "warning": "#pragma once in main file"
        },
        {
            "code": "    char *ptr2;\n    ptr1 = &val;\n    ptr2 = &val;\n\n    std::cout << \"Hello World!!!\" << std::endl\n",
            "column": 12,
            "error": "cannot convert 'float*' to 'char*' in assignment",
            "file": "./compilecode/Project1/hello_world.cpp",
            "line": 9
        },
        {
            "code": "    ptr2 = &val;\n\n    std::cout << \"Hello World!!!\" << std::endl\n    return 0;\n}\n",
            "column": 47,
            "error": "expected ';' before 'return'",
            "file": "./compilecode/Project1/hello_world.cpp",
            "line": 11
        }
    ]
}
